CCS PCM C Compiler, Version 5.025, 5967               12-Oct-17 09:56

               Filename:   C:\Users\Dung Phan\Documents\ButtonLed\ButtonLED\main.lst

               ROM used:   97 words (1%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
....................  
....................  
.................... //Khai bao nut 
....................  
.................... #define BUT_1 input(PIN_B4) 
.................... #define BUT_2 input(PIN_B5) 
....................  
.................... //Khai bao den 
....................  
.................... #define LED_1 PIN_D0 
.................... #define LED_2 PIN_D1 
....................  
.................... int a=0,b=0; 
....................  
.................... void main() 
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  CLRF   20
001C:  CLRF   21
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
.................... { 
....................    output_d(0xFF); 
0025:  CLRF   08
0026:  MOVLW  FF
0027:  BCF    03.5
0028:  MOVWF  08
....................    while(TRUE) 
....................    { 
....................       if(BUT_1==0) 
0029:  BSF    03.5
002A:  BSF    06.4
002B:  BCF    03.5
002C:  BTFSC  06.4
002D:  GOTO   044
....................       { 
....................          while(BUT_1==0) 
002E:  BSF    03.5
002F:  BSF    06.4
0030:  BCF    03.5
0031:  BTFSC  06.4
0032:  GOTO   037
....................          {delay_ms(1);} 
0033:  MOVLW  01
0034:  MOVWF  22
0035:  CALL   004
0036:  GOTO   02E
....................          a=1; 
0037:  MOVLW  01
0038:  MOVWF  20
....................          while(a==1) 
0039:  DECFSZ 20,W
003A:  GOTO   044
....................          { 
....................             output_bit(LED_1,0); 
003B:  BCF    08.0
003C:  BSF    03.5
003D:  BCF    08.0
....................             if(BUT_1==0) 
003E:  BSF    06.4
003F:  BCF    03.5
0040:  BTFSS  06.4
....................             a=0; 
0041:  CLRF   20
....................             break; 
0042:  GOTO   044
0043:  GOTO   039
....................          } 
....................       } 
....................       if(BUT_2==0) 
0044:  BSF    03.5
0045:  BSF    06.5
0046:  BCF    03.5
0047:  BTFSC  06.5
0048:  GOTO   05F
....................       { 
....................          while(BUT_2==0) 
0049:  BSF    03.5
004A:  BSF    06.5
004B:  BCF    03.5
004C:  BTFSC  06.5
004D:  GOTO   052
....................          {delay_ms(1);} 
004E:  MOVLW  01
004F:  MOVWF  22
0050:  CALL   004
0051:  GOTO   049
....................          b=1; 
0052:  MOVLW  01
0053:  MOVWF  21
....................          while(b==1) 
0054:  DECFSZ 21,W
0055:  GOTO   05F
....................          { 
....................             output_bit(LED_2,0); 
0056:  BCF    08.1
0057:  BSF    03.5
0058:  BCF    08.1
....................             if(BUT_2==0) 
0059:  BSF    06.5
005A:  BCF    03.5
005B:  BTFSS  06.5
....................             b=0; 
005C:  CLRF   21
....................             break; 
005D:  GOTO   05F
005E:  GOTO   054
....................          } 
....................       } 
005F:  GOTO   029
....................    } 
....................  
.................... } 
0060:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
